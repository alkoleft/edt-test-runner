/*******************************************************************************
 * Copyright (c) 2000, 2017 IBM Corporation and others.
 * Copyright (c) 2022 BIA-Technologies Limited Liability Company.
 *
 * This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License 2.0
 * which accompanies this distribution, and is available at
 * https://www.eclipse.org/legal/epl-2.0/, or the Apache License, Version 2.0
 * which is available at https://www.apache.org/licenses/LICENSE-2.0.
 *
 * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *     Andreas Schmid, service@aaschmid.de - Locate test method even if it contains parameters - http://bugs.eclipse.org/343935
 *     BIA-Technologies LLC - adaptation for EDT
 *******************************************************************************/
package ru.biatech.edt.junit.ui.report.actions;

import com._1c.g5.v8.dt.bsl.model.Method;
import com._1c.g5.v8.dt.bsl.model.Module;
import com._1c.g5.v8.dt.metadata.mdclass.CommonModule;
import com._1c.g5.v8.dt.metadata.mdclass.MdObject;
import org.eclipse.jface.text.TextSelection;
import org.eclipse.ui.PlatformUI;
import org.eclipse.xtext.nodemodel.ICompositeNode;
import org.eclipse.xtext.nodemodel.util.NodeModelUtils;
import ru.biatech.edt.junit.TestViewerPlugin;
import ru.biatech.edt.junit.kinds.ITestResolver;
import ru.biatech.edt.junit.model.TestCaseElement;
import ru.biatech.edt.junit.ui.IJUnitHelpContextIds;
import ru.biatech.edt.junit.ui.report.TestRunnerViewPart;

/**
 * Open a class on a Test method.
 */
public class OpenTestAction extends OpenEditorAction {

  // TODO Перейти на использование BslSourceDisplay
  public OpenTestAction(TestRunnerViewPart testRunnerPart, TestCaseElement testCase) {

    this(testRunnerPart, testCase.getTestClassName());
  }

  public OpenTestAction(TestRunnerViewPart testRunner, String className) {
    super(testRunner, className);
    PlatformUI.getWorkbench().getHelpSystem().setHelp(this, IJUnitHelpContextIds.OPEN_TEST_ACTION);
    setImageDescriptor(TestViewerPlugin.ui().getImageDescriptor("elcl16/goto_input.png")); //$NON-NLS-1$
  }

  @Override
  protected ITestResolver.MethodPositionInfo getPosition() {
    return getResolver(getLaunchedProject()).getMethodPositionInfo(fClassName);
  }

  @Override
  protected TextSelection getSelection(MdObject moduleOwner, ITestResolver.MethodPositionInfo position) {
    Method testMethod = null;
    if (moduleOwner instanceof CommonModule) {
      testMethod = findMethod(((CommonModule) moduleOwner).getModule(), position.getMethodName());
    }

    if (testMethod == null) {
      return null;
    }
    ICompositeNode testNode = NodeModelUtils.findActualNodeFor(testMethod);

    return new TextSelection(testNode.getOffset(), 0);
  }

  private Method findMethod(Module module, String name) {
    for (Method method : module.allMethods()) {
      if (method.getName().equalsIgnoreCase(name)) {
        return method;
      }
    }
    return null;
  }
}
